{"version":3,"file":"MfeOne.js","sourceRoot":"","sources":["../../src/MfeOne.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,QAAQ,MAAM,iBAAiB,CAAC;AAEvC,MAAM,OAAO,MAAO,SAAQ,UAAU;IAcpC;QACE,KAAK,EAAE,CAAC;QAKkB,YAAO,GAAG,wBAAwB,CAAC;QAEnC,yBAAoB,GAAG,EAAE,CAAC;QAEzB,iBAAY,GAAG,KAAK,CAAC;QAEtB,UAAK,GAAG,OAAO,CAAC;QAEhB,YAAO,GAAG,CAAC,CAAC;QAZtC,aAAa;QACb,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAYD,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,QAAQ,EAAE,CAAC;QAE3B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAU,EAAE,EAAE;YACvC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;YACrC,QAAQ,KAAK,CAAC,KAAK,EAAE;gBACnB,KAAK,gBAAgB;oBACnB,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;aACrB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED,YAAY,CAAC,CAAgC;QAC3C,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;IAC7C,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC;QACzC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,YAAY;YACtB,CAAC,CAAC,IAAI,CAAA;4DACgD,IAAI,CAAC,OAAO;kBACtD,IAAI,CAAC,KAAK;;;2CAGe,IAAI,CAAC,YAAY;;gCAE5B,IAAI,CAAC,cAAc;;SAE1C;YACH,CAAC,CAAC,IAAI,CAAA;4DACgD,IAAI,CAAC,OAAO;kBACtD,IAAI,CAAC,KAAK;wBACJ,IAAI,CAAC,OAAO;gCACJ,IAAI,CAAC,WAAW;gCAChB,IAAI,CAAC,cAAc;;SAE1C,CAAC;IACR,CAAC;;AA7EM,aAAM,GAAG,GAAG,CAAA;;;;;;;;;GASlB,CAAC;AAQ0B;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;uCAAoC;AAEnC;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;oDAA2B;AAEzB;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;4CAAsB;AAEtB;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;qCAAiB;AAEhB;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;uCAAa","sourcesContent":["import { html, css, LitElement } from \"lit\";\nimport { property } from \"lit/decorators.js\";\nimport eventBus from \"./lib/event-bus\";\n\nexport class MfeOne extends LitElement {\n  eventBus: any;\n\n  static styles = css`\n    :host {\n      display: block;\n      font-family: sans-serif;\n    }\n    .container {\n      padding: 25px;\n      border: 1px solid cyan;\n    }\n  `;\n\n  constructor() {\n    super();\n    // @ts-ignore\n    this.settingsMode = false;\n  }\n\n  @property({ type: String }) bgColor = \"rgba(0, 255, 255, 0.1)\";\n\n  @property({ type: String }) settingsFieldBgColor = \"\";\n\n  @property({ type: Boolean }) settingsMode = false;\n\n  @property({ type: String }) title = \"MFE-1\";\n\n  @property({ type: Number }) counter = 0;\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.eventBus = eventBus();\n\n    this.eventBus.addListener((event: any) => {\n      console.log(\"in MFE-1 event\", event);\n      switch (event.topic) {\n        case \"mfe1:increment\":\n          this.counter += 1;\n      }\n    });\n  }\n\n  __increment() {\n    this.eventBus.emit({ topic: \"mfe1:increment\" });\n  }\n\n  __showSettings() {\n    this.settingsMode = true;\n  }\n\n  __setBgColor(e: { target: { value: string } }) {\n    this.settingsFieldBgColor = e.target.value;\n  }\n\n  __saveSettings() {\n    this.bgColor = this.settingsFieldBgColor;\n    this.settingsMode = false;\n  }\n\n  render() {\n    return this.settingsMode\n      ? html`\n          <div class=\"container\" style=\"background-color: ${this.bgColor}\">\n            <h2>${this.title}</h2>\n            <div>\n              <label>Background colour</label>\n              <input type=\"text\" @input=\"${this.__setBgColor}\" />\n            </div>\n            <p><button @click=${this.__saveSettings}>Done</button></p>\n          </div>\n        `\n      : html`\n          <div class=\"container\" style=\"background-color: ${this.bgColor}\">\n            <h2>${this.title}</h2>\n            <p>count: ${this.counter}</p>\n            <p><button @click=${this.__increment}>Increment</button></p>\n            <p><button @click=${this.__showSettings}>Settings</button></p>\n          </div>\n        `;\n  }\n}\n"]}